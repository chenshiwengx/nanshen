<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
	    http://www.springframework.org/schema/aop
	    http://www.springframework.org/schema/aop/spring-aop.xsd"
	default-lazy-init="true">
	
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
      <!--  destroy-method="close"  <context:property-placeholder ignore-unresolvable="true"
			location="classpath*:/application.properties" /> -->	
        <!-- Connection Info -->
 <!--        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.psw}" /> -->
<!-- 		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
        <property name="url" value="jdbc:oracle:thin:@192.168.1.23:1521:orcl" />
        <property name="username" value="app" />
        <property name="password" value="app" /> -->
        
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://rds2yfruyeub32y.mysql.rds.aliyuncs.com:3306/dbxp74k19179e8rf" />
        <property name="username" value="dbxp74k19179e8rf" />
        <property name="password" value="2832746" />

	<!-- Connection Pooling DBCP-->
        <property name="initialSize" value="5" />
        <property name="maxActive" value="100" />
        <property name="maxIdle" value="30" />
        <property name="maxWait" value="1000" />
        <property name="poolPreparedStatements" value="true" />
        <property name="defaultAutoCommit" value="false" />  
    </bean>
    <!-- 事务控制 -->
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean> 
    
    <tx:annotation-driven transaction-manager="transactionManager" />  
    
    
    <!--配置事务处理策略，transaction-manager属性指定事务管理器。
	若事务管理器bean的id即为transactionManager，则
	transaction-manager的属性可以不指定-->
<!-- 	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			所有以find开头的方法都是只读的
			<tx:method name="find*" read-only="true" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="save*" rollback-for="Exception"/>
			其他方法使用默认事务策略
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice> -->
	<!-- AOP配置-->
	<!-- <aop:config>
		pointcut元素定义一个切入点，execution中的第一个星号
		用以匹配方法的返回类型，这里星号表明匹配所有返回类型。
		com.bolo.service.*.*(..)表明匹配com.bolo.service包下的所有类的所有
		方法
		<aop:pointcut id="myPointcut"
		expression="execution(* com.bolo.service.*.*(..))" />
		将定义好的事务处理策略应用到上述的切入点
		<aop:advisor advice-ref="txAdvice" pointcut-ref="myPointcut" />
	</aop:config> -->
    
 
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-conf.xml" />
    </bean>
    
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.bolo.dao;" />
    </bean>
    
   	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
 	<context:component-scan base-package="com.bolo">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>  
   	<!-- <context:component-scan base-package="com.bolo.service" /> -->
</beans>